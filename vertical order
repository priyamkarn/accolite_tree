vector<int> verticalOrder(Node *root)
    {
        //Your code here
        queue<pair<Node*,int>>q;
        q.push(make_pair(root,0));
        map<int,vector<int>>mp;
        vector<int>ans;
        while(!q.empty())
        {
            Node *temp=q.front().first;
            int line=q.front().second;
            q.pop();
            mp[line].push_back(temp->data);
           
           if(temp->left)
           {
               q.push(make_pair(temp->left,line-1));
           }
           if(temp->right)
           {
               q.push(make_pair(temp->right,line+1));
           }
        }
        for(auto i:mp)
        {
            for(int it:i.second)
            {
                ans.push_back(it);
            }
        }
        return ans;
    }
Therefore, in cases where the order of keys is important and the number of elements is not too large, using a map can be more efficient than using an unordered_map.
